form[id^="mktoForm_"] {
    // Hold space open for form to minimise layout jumping
    min-height: 320px;

    &.mktoFormSubmitted--successful {
        min-height: auto; // Remove min-height after form successfully submitted.
    }
}

.mktoFormRow {
    @extend .form__field-container;
    @include margin(0, 'bottom');
}

@media (min-width: 1200px) {
    .mktoFormRow {
        display: flex;
        flex-direction: row;
    }
}

.mktoFormCol {
    @include margin(0.6, 'bottom', true);
    flex-grow: 1;
    flex-basis: 100%;

    & + & {
        @include padding(0.6, 'left'); // Space out columns.

        @include responsive('large') {
            @include padding(0, 'left');
        }
    }
}

.mktoLabel {
    display: flex;
}

.mktoAsterix {
    display: none;
    order: 1;
}

.mktoFieldWrap {
    // We set these containers as flex so that we can reorder 
    // .mktoCheckboxList headings above the lists themselves.
    display: flex;
    flex-wrap: wrap;
}

.mktoField {
    color: color('grey', 7);
}

.mktoRequiredField .mktoAsterix {
    display: block;
}

.mktoButton[type="submit"] {
    @extend %button--primary;
}

.mktoInvalid {
    border-width: $hc-forms-input-error-border-width;
    border-color: $hc-forms-input-error-border-colour;
}

.mktoErrorMsg {
    @include margin($hc-forms-error-message-margin-top-ratio, 'top');
    color: $hc-forms-error-message-colour;
}

.mktoCheckboxList {
    @include margin(0.1, 'right');
    display: flex;
    flex-wrap: wrap;
    flex-basis: 100%;
    line-height: 20px;

    label {
        @include margin(0, 'right', true);

        // Get the checkboxes onto individual lines, instead of inline.
        flex-basis: calc(100% - 20px); // 20px is the width of the input
    }

    & + label {
        // The HTML for .mktoCheckboxList has the heading following the list, 
        // so we need to reorder the elements.
        order: -1;

        .mktoAsterix {
            float: right;
        }
    }
}

/**
 * Some elements have width styles applied to them after our custom JavaScript
 * has removed any style attributes from the Marketo forms. This rule ensures
 * that our CSS trumps any styles applied by the Marketo JavaScript.
 */
.mktoHasWidth {
    width: 100% !important;
}

/**
 * For the Databases of Interest field, have a 2-column layout for checkboxes + labels.
 * 
 * Slack thread: https://redgate.slack.com/archives/GF85KV7FX/p1678188588081699
 */
 [name="Database_s_of_Interest__c"] + label {
    margin-bottom: 30px;
    flex-basis: calc(49% - 20px);

    // Tweak to prevent line-wrapping when we break to single-column flow
    @media only screen and (max-width:600px) {
        flex-basis: calc(33% - 20px);
    }
}